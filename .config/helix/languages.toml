# languauges.toml
[language-server.emmet-ls]
command = "emmet-ls"
args = ["--stdio"]

[[language]]
name = "html"
auto-format = true
language-servers = ["vscode-html-language-server", "emmet-ls", "tailwindcss-ls"]
formatter = { command = "prettier", args = ["--parser", "html"] }

[[language]]
name = "json"
formatter = { command = "prettier", args = ["--parser", "json"] }

[[language]]
name = "css"
language-servers = [
  "stylelint",
  "vscode-css-language-server",
]
auto-format = true
formatter = { command = "prettier", args = ["--parser", "css"] }

[[language]]
name = "scss"
file-types = ["scss"]
language-servers = [
  "stylelint",
  { name = "vscode-css-language-server", only-features = ["completion"] },
]
auto-format = true
formatter = { command = "bash", args = ["-c", "npx stylelint --fix 2>&1 | prettier --parser css "] }

[[language]]
name = "vue"
formatter = { command = "prettier", args = ["--parser", "vue"] }
auto-format = true

[[language]]
name = "javascript"
formatter = { command = "prettier", args = ["--parser", "typescript"] }
language-servers = ["typescript-language-server"]
auto-format = true

[[language]]
name = "typescript"
auto-format = true
language-servers = ["typescript-language-server", "vscode-eslint-language-server", "graphql-language-service"]
formatter = { command = "prettier", args = ["--parser", "typescript"] }

[[language]]
name = "tsx"
auto-format = true
language-servers = ["typescript-language-server", "vscode-eslint-language-server", "emmet-ls", "tailwindcss-ls"]
formatter = { command = "prettier", args = ["--parser", "typescript"] }
block-comment-tokens = { start = "{/*", end = "*/}" }

[[language]]
name = "jsx"
auto-format = true
language-servers = ["typescript-language-server", "vscode-eslint-language-server", "emmet-ls", "tailwindcss-ls"]
formatter = { command = "prettier", args = ["--parser", "typescript"] }

[[language]]
name = "ejs"
auto-format = true
language-servers = ["vscode-html-language-server", "emmet-ls", "tailwindcss-ls"]
formatter = { command = "prettier", args = ["--parser", "ejs"] }

[[language]]
name = "markdown"
language-servers = ["marksman", "mdpls"]
formatter = { command = "prettier", args = ["--parser", "markdown"] }
auto-format = true

[language-server.mdpls]
command = "/home/mauricefh/.cargo/bin/mdpls"
config = { markdown.preview.auto = true }

[language-server.texlab]
command = "texlab"

[language-server.texlab.config]
# Build settings
[language-server.texlab.config.texlab.build]
executable = "latexmk"  # or "tectonic" if using Tectonic
args = ["-pdf", "-interaction=nonstopmode", "-synctex=1", "%f"]
onSave = true
forwardSearchAfter = true

# Auxiliary directory for build files
[language-server.texlab.config.texlab.auxDirectory]
path = "build"

# Forward search configuration (for SyncTeX)
[language-server.texlab.config.texlab.forwardSearch]
executable = "zathura"
args = ["--synctex-forward", "%l:1:%f", "%p"]

# ChkTeX linting
[language-server.texlab.config.texlab.chktex]
onOpenAndSave = true
onEdit = true

# Diagnostics
[language-server.texlab.config.texlab.diagnostics]
allowedPatterns = ["warning", "error"]

# Latexindent formatting
[language-server.texlab.config.texlab.latexindent]
modifyLineBreaks = false

[[language]]
name = "latex"
scope = "source.tex"
injection-regex = "tex|latex"
file-types = ["tex", "sty", "cls", "bib"]
roots = ["Tuxfile", ".git", "main.tex", "document.tex"]
comment-token = "%"
language-servers = ["texlab", "ltex"]  # ltex is optional
indent = { tab-width = 2, unit = "  " }
auto-format = true
formatter = { command = "latexindent", args = ["-l", "-w"] }

[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py", "pyi", "pyw"]
comment-token = "#"
language-servers = [ "pyright", "ruff-lsp" ]
indent = { tab-width = 4, unit = " " }
formatter = { command = "black", args = ["-"] }
auto-format = true

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.ruff-lsp]
command = "ruff-lsp"
